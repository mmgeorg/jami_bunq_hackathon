# Local .terraform directories
**/.terraform/*

# IDE and Virtual Envs
.idea
.env

dependency-reduced-pom.xml
target/*
target


.DS_Store
*/.DS_Store

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json
# However, we do expect e.g. `envs/dev/dev.tfvars` in `.gitlab-ci.yml`,
# so we allow `tfvars` inside of `envs/*/` only:
!**/envs/*/*.tfvars
!**/envs/*/*.tfvars.json

# Node.js dependencies
node_modules/
npm-debug.log
yarn-error.log
yarn-debug.log
.pnp/
.pnp.js

# Build files
/frontend/build/
/backend/dist/

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Keep .terraform.lock.hcl in version control (provider version consistency)
!.terraform.lock.hcl
!**/.terraform.lock.hcl
/backend/revolut.csv
/backend/seedData.js
/backend/requestTopUp.js
